$date
  Sun Aug 30 11:19:34 2020
$end
$version
  GHDL v0
$end
$timescale
  1 fs
$end
$scope module standard $end
$upscope $end
$scope module std_logic_1164 $end
$upscope $end
$scope module reg_file_tb $end
$var reg 1 ! clk $end
$var reg 6 " inputs[5:0] $end
$var reg 2 # outputs[1:0] $end
$scope module uut $end
$var reg 1 $ read_n1 $end
$var reg 1 % read_n2 $end
$var reg 1 & write_n $end
$var reg 1 ' write_data $end
$var reg 1 ( write $end
$var reg 1 ) clk $end
$var reg 1 * read_data1 $end
$var reg 1 + read_data2 $end
$var reg 1 , reg0_d $end
$var reg 1 - reg0_q $end
$var reg 1 . reg0_q_bar $end
$var reg 1 / reg1_d $end
$var reg 1 0 reg1_q $end
$var reg 1 1 reg1_q_bar $end
$var reg 1 2 and_0 $end
$var reg 1 3 and_1 $end
$var reg 1 4 decoder_out0 $end
$var reg 1 5 decoder_out1 $end
$scope module decoder $end
$var reg 1 6 i $end
$var reg 1 7 out0 $end
$var reg 1 8 out1 $end
$upscope $end
$scope module and0 $end
$var reg 1 9 a $end
$var reg 1 : b $end
$var reg 1 ; c $end
$upscope $end
$scope module and1 $end
$var reg 1 < a $end
$var reg 1 = b $end
$var reg 1 > c $end
$upscope $end
$scope module reg0 $end
$var reg 1 ? d $end
$var reg 1 @ c $end
$var reg 1 A q $end
$var reg 1 B q_bar $end
$var reg 1 C u $end
$var reg 1 D v $end
$var reg 1 E notc $end
$scope module master $end
$var reg 1 F c $end
$var reg 1 G d $end
$var reg 1 H q $end
$var reg 1 I q_bar $end
$upscope $end
$scope module slave $end
$var reg 1 J c $end
$var reg 1 K d $end
$var reg 1 L q $end
$var reg 1 M q_bar $end
$upscope $end
$upscope $end
$scope module reg1 $end
$var reg 1 N d $end
$var reg 1 O c $end
$var reg 1 P q $end
$var reg 1 Q q_bar $end
$var reg 1 R u $end
$var reg 1 S v $end
$var reg 1 T notc $end
$scope module master $end
$var reg 1 U c $end
$var reg 1 V d $end
$var reg 1 W q $end
$var reg 1 X q_bar $end
$upscope $end
$scope module slave $end
$var reg 1 Y c $end
$var reg 1 Z d $end
$var reg 1 [ q $end
$var reg 1 \ q_bar $end
$upscope $end
$upscope $end
$scope module mux1 $end
$var reg 1 ] a $end
$var reg 1 ^ b $end
$var reg 1 _ s $end
$var reg 1 ` c $end
$upscope $end
$scope module mux2 $end
$var reg 1 a a $end
$var reg 1 b b $end
$var reg 1 c s $end
$var reg 1 d c $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
0!
b000000 "
bUU #
0$
0%
0&
0'
0(
0)
U*
U+
U,
U-
U.
U/
U0
U1
02
03
14
05
06
17
08
09
1:
0;
0<
0=
0>
0?
0@
UA
UB
UC
UD
UE
0F
0G
UH
UI
UJ
UK
UL
UM
0N
0O
UP
UQ
UR
US
UT
0U
0V
UW
UX
UY
UZ
U[
U\
U]
U^
0_
U`
Ua
Ub
0c
Ud
#5000000
b000110 "
1'
1(
12
19
1;
1<
1?
1@
1C
0D
1F
1G
1H
0I
1K
1N
1V
#10000000
1!
1)
#20000000
0!
0)
#30000000
1!
1)
#40000000
0!
0)
#50000000
1!
1)
#60000000
0!
0)
#70000000
1!
1)
#80000000
0!
0)
